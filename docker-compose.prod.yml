version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    container_name: sustaain-postgres-prod
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-sustaain}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-sustaain_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - sustaain-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-sustaain} -d ${POSTGRES_DB:-sustaain_db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sustaain-backend-prod
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - sustaain-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sustaain-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    restart: always
    networks:
      - sustaain-network

networks:
  sustaain-network:
    driver: bridge

volumes:
  postgres_data:
